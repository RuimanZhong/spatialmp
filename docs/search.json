[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 spatialmp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/vignetteMelding.html","id":"specifying-the-arguments-of-fnpredictmelding","dir":"Articles","previous_headings":"","what":"Specifying the arguments of fnPredictMelding()","title":"vignetteMelding","text":"need specify observed point areal data used estimation. sf objects called depoint point data dearea areal data. , need specify locations areas want get predictions. Depending want predict, need specify sf objects dppoint set points dparea set areas. dppoint can sf object containing points dense set regular points within study region representing continuous surface (dpcontsurface). also need specify sf object boundary region study, boundaryregion. Note objects need sf objects projection. Therefore, raster sp data, need transform sf able use package.","code":""},{"path":"/articles/vignetteMelding.html","id":"specifying-the-boundary-region","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding()","what":"Specifying the boundary region","title":"vignetteMelding","text":"example, specify projection 4326 WSG84 (latitude longitude). region study UK. obtain boundary region study rgeoboundaries package transform chosen projection.","code":"# CRS projection crsproj <- 4326  library(rgeoboundaries) #> Registered S3 method overwritten by 'hoardr': #>   method           from #>   print.cache_info httr boundaryregion <- geoboundaries(\"United Kingdom\") boundaryregion <- st_transform(boundaryregion , crsproj)   ggplot(boundaryregion) + geom_sf()"},{"path":[]},{"path":"/articles/vignetteMelding.html","id":"point-data-for-estimation","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding() > Specifying the observed point and areal data for estimation","what":"Point data for estimation","title":"vignetteMelding","text":"observed point data depoint sf object three columns, namely, x y coordinates locations, value observed PM2.5 values locations. example, point data .csv file. reading data frame, convert sf object specify chosen projection. can download data https://github.com/RuimanZhong/SpatialM","code":"depoint <- depoint %>% st_as_sf(coords = c(\"x\", \"y\"), dim = \"XY\") %>%   st_set_crs(crsproj) %>% st_cast(\"MULTIPOINT\") head(depoint) #> Simple feature collection with 6 features and 1 field #> Geometry type: MULTIPOINT #> Dimension:     XY #> Bounding box:  xmin: -5.928833 ymin: 51.07479 xmax: -1.829999 ymax: 57.15736 #> Geodetic CRS:  WGS 84 #>       value                       geometry #> 1  5.371804 MULTIPOINT ((-2.094278 57.1... #> 2  2.549784 MULTIPOINT ((-3.2429 55.792... #> 3 10.701091 MULTIPOINT ((-4.041924 51.0... #> 4  9.554778 MULTIPOINT ((-5.928833 54.5... #> 5 13.283601 MULTIPOINT ((-1.875024 52.4... #> 6 10.227034 MULTIPOINT ((-1.829999 52.4... ggplot(data = boundaryregion) + geom_sf() + geom_sf(data = depoint, aes(col = value))"},{"path":"/articles/vignetteMelding.html","id":"areal-data-for-estimation","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding() > Specifying the observed point and areal data for estimation","what":"Areal data for estimation","title":"vignetteMelding","text":"areal data dearea sf object columns XXXX","code":"ggplot(data = boundaryregion) + geom_sf() + geom_sf(data = dearea, aes(fill = value))"},{"path":[]},{"path":"/articles/vignetteMelding.html","id":"point-data-for-prediction","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding() > Specifying point, areal and continuous surface data for prediction","what":"Point data for prediction","title":"vignetteMelding","text":"Point data prediction dppoint sf object columns XXX. example use point data prediction estimation.","code":"dppoint <- depoint   ggplot(data = boundaryregion) + geom_sf() + geom_sf(data = dppoint)"},{"path":"/articles/vignetteMelding.html","id":"areal-data-for-prediction","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding() > Specifying point, areal and continuous surface data for prediction","what":"Areal data for prediction","title":"vignetteMelding","text":"Areal data prediction dparea sf object columns XXX. example use areal data prediction estimation.","code":"dparea <- dearea   ggplot(data = boundaryregion) + geom_sf() + geom_sf(data = dparea)"},{"path":"/articles/vignetteMelding.html","id":"continuous-surface-for-prediciton","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding() > Specifying point, areal and continuous surface data for prediction","what":"Continuous surface for prediciton","title":"vignetteMelding","text":"wish predict continuous surface, need provide dense grid points within region study. can creating bounding box region study using expand.grid() create grid points within boundary. next step remove point outside boundary. Thus, leaf points just target points, dppoint fnPredictMelding().","code":"# Bounding box of the boundary of the region of study bb <- unname(attributes(st_geometry(boundaryregion))$bbox)  # Grid x <- seq(bb[1] - 1, bb[3] + 1, length.out = 50) y <- seq(bb[2] - 1, bb[4] + 1, length.out = 50) coop <- expand.grid(x, y) coop_sf <- sf::st_as_sf(coop, coords = c('Var1','Var2'), crs = crsproj)  ggplot()+geom_sf(data = coop_sf) # Transform matrix data to sf objet dpcontsurface <- coop_sf %>% st_join(boundaryregion, left = FALSE)    ggplot(dpcontsurface) + geom_sf() ggplot(data = boundaryregion) + geom_sf() + geom_sf(data = dpcontsurface)"},{"path":"/articles/vignetteMelding.html","id":"melding-approach-with-fnpredictmelding","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding()","what":"Melding approach with fnPredictMelding()","title":"vignetteMelding","text":"show make prediction using melding approach using point data estimation , areal data estimation , point areal data estimation combined. Predictions obtained fnPredictMelding() function. returned value fnPredictMelding() list two objects. points areas EXPLAIN melding approach method based SPDE approach, needs uses triangulated mesh priors variance range spatial random effect make predictions. recommended user carefully chooses mesh priors. package provides function fnCreateMesh() help users create mesh, also functionality compute default mesh priors. arguments fnCreateMesh() depoint boundaryregion. boundaryregion mandatory. boundary estimated Gaussian random field. mesh created within boundary. estimation prediction done based created mesh, exist boundaryregion. words, input point/areal data target points areas locations within boundaryregion. allowed estimation prediction locations outside boundaryregion. depoint mandatory. input point data accessible, locations points used initial triangulation nodes created mesh. boundaryregion provided, function able generate mesh well. two parameters priorspdesigma priorspderange used create SPDE Penalized Complexity priors (PC priors), proposed Simpson et al.(2017). PC priors defined probability statements parameters \\(\\sigma\\) \\(\\rho\\). \\(\\sigma\\) marginal standard deviation random field \\(\\rho\\) spatial range field. users want set PC priors random fields, priorspdesigma priorspderange supposed input. two parameters 2 length vectors. first element priorspdesigmais value \\(\\sigma\\) second element probability \\(\\sigma\\) larger first element. , \\[ P(σ > σ_0)=p_σ \\] Similarly, first element priorspderange value \\(\\rho\\) second element probability \\(\\sigma\\) less first element. \\[ P(ρ < ρ_0)=p_ρ \\] Thus, two elements priorspdesigma priorspderange positive second elements (probabilities) also less 1.","code":""},{"path":"/articles/vignetteMelding.html","id":"prediction-using-point-data","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding() > Melding approach with fnPredictMelding()","what":"Prediction using point data","title":"vignetteMelding","text":"call function predict. predicted mean predicted interval obtained.","code":"# Create mesh mesh <- fnCreateMesh(depoint, boundaryregion) plot(mesh) points(as.matrix(st_coordinates(depoint)[ , c(1, 2)]), col = 2) respre <- fnPredictMelding(depoint = depoint, dearea = NULL, dppoint = dppoint, dparea = NULL, boundaryregion = boundaryregion, mesh = NULL) #> Creating stack head(respre) #> [[1]] #> Simple feature collection with 74 features and 4 fields #> Geometry type: MULTIPOINT #> Dimension:     XY #> Bounding box:  xmin: -7.331179 ymin: 50.37167 xmax: 1.301976 ymax: 57.15736 #> Geodetic CRS:  WGS 84 #> First 10 features: #>        value                       geometry pred_mean   pred_ll   pred_ul #> 1   5.371804 MULTIPOINT ((-2.094278 57.1...  6.550580  3.914498  8.992801 #> 2   2.549784 MULTIPOINT ((-3.2429 55.792...  6.914991  5.100334  8.547129 #> 3  10.701091 MULTIPOINT ((-4.041924 51.0... 10.392816  8.943155 11.841320 #> 4   9.554778 MULTIPOINT ((-5.928833 54.5...  9.865655  7.970188 11.838501 #> 5  13.283601 MULTIPOINT ((-1.875024 52.4... 10.946536  9.987447 11.995083 #> 6  10.227034 MULTIPOINT ((-1.829999 52.4... 10.933105 10.015721 11.910612 #> 7  11.189479 MULTIPOINT ((-1.830583 52.5... 10.953393 10.031297 11.954679 #> 8  12.487220 MULTIPOINT ((-1.830861 52.5... 10.953467 10.031125 11.955204 #> 9   7.837424 MULTIPOINT ((-3.007175 53.8...  9.371486  8.055029 10.583591 #> 10 11.660835 MULTIPOINT ((-2.584482 51.4... 10.582036  9.316051 11.818658 #>  #> [[2]] #> NULL ggplot(data = boundaryregion) + geom_sf() +   geom_sf(data = respre[[1]], aes(geometry = geometry, color = pred_mean))+   labs(title = \"Average PM 2.5  Level 2016, UK\", fill = \"PM 2.5\")"},{"path":"/articles/vignetteMelding.html","id":"prediction-using-areal-data","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding() > Melding approach with fnPredictMelding()","what":"Prediction using areal data","title":"vignetteMelding","text":"","code":"mesh <- fnCreateMesh(NULL, boundaryregion) respre <- fnPredictMelding(depoint =  NULL, dearea = dearea, dppoint = NULL, dparea = dparea, boundaryregion = boundaryregion,  mesh = NULL) #> Creating stack head(respre) #> [[1]] #> NULL #>  #> [[2]] #> Simple feature collection with 369 features and 4 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -8.05 ymin: 50.05 xmax: 1.85 ymax: 60.55 #> Geodetic CRS:  GCS_WGS_84_with_axis_order_normalized_for_visualization #> First 10 features: #>       value                       geometry pred_mean   pred_ll  pred_ul #> 1  1.304525 POLYGON ((-1.45 60.55, -1.1...  1.529532 0.8544293 2.205631 #> 2  1.471671 POLYGON ((-1.45 60.25, -1.1...  1.722975 1.0865609 2.359767 #> 3  1.950916 POLYGON ((-3.55 59.05, -3.2...  2.028445 1.4644438 2.592719 #> 4  1.784966 POLYGON ((-5.05 58.75, -4.7...  1.773035 1.2527676 2.293541 #> 5  2.007207 POLYGON ((-3.85 58.75, -3.5...  2.012323 1.5787840 2.445551 #> 6  2.086011 POLYGON ((-3.55 58.75, -3.2...  2.116046 1.6965471 2.535770 #> 7  2.416477 POLYGON ((-3.25 58.75, -2.9...  2.214291 1.7063267 2.723533 #> 8  1.528081 POLYGON ((-6.85 58.45, -6.5...  1.576471 1.0805698 2.072329 #> 9  1.534573 POLYGON ((-6.55 58.45, -6.2...  1.584396 1.0346244 2.133714 #> 10 1.742093 POLYGON ((-5.05 58.45, -4.7...  1.775110 1.3164423 2.233775 ggplot(data = boundaryregion) + geom_sf() +    geom_sf(data = respre[[2]], aes(geometry = geometry, fill = pred_mean)) +    labs(title = \"Average PM 2.5  Level 2016, UK\", fill = \"PM 2.5\")"},{"path":"/articles/vignetteMelding.html","id":"prediction-using-point-and-areal-data","dir":"Articles","previous_headings":"Specifying the arguments of fnPredictMelding() > Melding approach with fnPredictMelding()","what":"Prediction using point and areal data","title":"vignetteMelding","text":"","code":"mesh <- fnCreateMesh(depoint, boundaryregion) respre <- fnPredictMelding(depoint =  depoint, dearea = dearea, dppoint = dppoint, dparea = dparea, boundaryregion = boundaryregion,  mesh = NULL) #> Creating stack head(respre) #> [[1]] #> Simple feature collection with 74 features and 4 fields #> Geometry type: MULTIPOINT #> Dimension:     XY #> Bounding box:  xmin: -7.331179 ymin: 50.37167 xmax: 1.301976 ymax: 57.15736 #> Geodetic CRS:  WGS 84 #> First 10 features: #>        value                       geometry pred_mean   pred_ll   pred_ul #> 1   5.371804 MULTIPOINT ((-2.094278 57.1...  4.007241  3.077103  4.946125 #> 2   2.549784 MULTIPOINT ((-3.2429 55.792...  4.680830  3.947745  5.412652 #> 3  10.701091 MULTIPOINT ((-4.041924 51.0...  7.250230  6.478988  8.038789 #> 4   9.554778 MULTIPOINT ((-5.928833 54.5...  4.892116  4.076182  5.744236 #> 5  13.283601 MULTIPOINT ((-1.875024 52.4... 11.080264 10.433206 11.754357 #> 6  10.227034 MULTIPOINT ((-1.829999 52.4... 11.070072 10.481435 11.676665 #> 7  11.189479 MULTIPOINT ((-1.830583 52.5... 11.110515 10.506651 11.736701 #> 8  12.487220 MULTIPOINT ((-1.830861 52.5... 11.110604 10.506414 11.737193 #> 9   7.837424 MULTIPOINT ((-3.007175 53.8...  7.634217  6.869458  8.422150 #> 10 11.660835 MULTIPOINT ((-2.584482 51.4...  9.670917  9.012032 10.359395 #>  #> [[2]] #> Simple feature collection with 369 features and 4 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -8.05 ymin: 50.05 xmax: 1.85 ymax: 60.55 #> Geodetic CRS:  GCS_WGS_84_with_axis_order_normalized_for_visualization #> First 10 features: #>       value                       geometry pred_mean   pred_ll  pred_ul #> 1  1.304525 POLYGON ((-1.45 60.55, -1.1...  2.342074 0.6416859 4.035639 #> 2  1.471671 POLYGON ((-1.45 60.25, -1.1...  2.525131 0.9461201 4.097728 #> 3  1.950916 POLYGON ((-3.55 59.05, -3.2...  2.119559 0.9107062 3.335055 #> 4  1.784966 POLYGON ((-5.05 58.75, -4.7...  1.825165 0.7072667 2.958112 #> 5  2.007207 POLYGON ((-3.85 58.75, -3.5...  2.049390 1.1200045 2.982176 #> 6  2.086011 POLYGON ((-3.55 58.75, -3.2...  2.138530 1.1890642 3.088845 #> 7  2.416477 POLYGON ((-3.25 58.75, -2.9...  2.252132 1.1686884 3.334321 #> 8  1.528081 POLYGON ((-6.85 58.45, -6.5...  1.850579 0.6698023 3.026604 #> 9  1.534573 POLYGON ((-6.55 58.45, -6.2...  1.720579 0.5126409 2.919338 #> 10 1.742093 POLYGON ((-5.05 58.45, -4.7...  1.806396 0.7936027 2.827475 # point data ggplot(data = boundaryregion) + geom_sf() +   geom_sf(data = respre[[1]], aes(geometry = geometry, color = pred_mean))+   labs(title = \"Average PM 2.5  Level 2016, UK\", fill = \"PM 2.5\") # areal data ggplot(data = boundaryregion) + geom_sf() +    geom_sf(data = respre[[2]], aes(geometry = geometry, fill = pred_mean)) +    labs(title = \"Average PM 2.5  Level 2016, UK\", fill = \"PM 2.5\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2022). spatialmp: Package (One Line, Title Case). R package version 0.0.0.9000.","code":"@Manual{,   title = {spatialmp: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"spatialmp","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal spatialmp predict spatial data using Bayesian Melding Method. prediction done SPDE Integrated nested Laplace approximation. data assumed sampled latent Gaussian process.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version spatialmp GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"RuimanZhong/spatialmp\")"},{"path":"/reference/fnCheckInputsMelding.html","id":null,"dir":"Reference","previous_headings":"","what":"This is a function to check the inputs of fnPredictMelding()\ncheck they are sf objects\ncheck CRS points and areas are the same. — fnCheckInputsMelding","title":"This is a function to check the inputs of fnPredictMelding()\ncheck they are sf objects\ncheck CRS points and areas are the same. — fnCheckInputsMelding","text":"function check inputs fnPredictMelding() check sf objects check CRS points areas .","code":""},{"path":"/reference/fnCheckInputsMelding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is a function to check the inputs of fnPredictMelding()\ncheck they are sf objects\ncheck CRS points and areas are the same. — fnCheckInputsMelding","text":"","code":"fnCheckInputsMelding(depoint, dearea, dppoint, dparea, boundaryregion)"},{"path":"/reference/fnCheckInputsMelding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is a function to check the inputs of fnPredictMelding()\ncheck they are sf objects\ncheck CRS points and areas are the same. — fnCheckInputsMelding","text":"depoint dataset estimation point.sf obj. Columns value, geometry dearea dataset estimation area. sf obj. Columns value, geometry dppoint dataset prediction point. sf obj. Columns geometry dparea dataset prediction area. sf obj. Columns geometry boundaryregion boundary region mesh. sf object. input data target within boundary.","code":""},{"path":"/reference/fnCheckInputsMelding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is a function to check the inputs of fnPredictMelding()\ncheck they are sf objects\ncheck CRS points and areas are the same. — fnCheckInputsMelding","text":"inputs fn","code":""},{"path":"/reference/fnCreateMesh.html","id":null,"dir":"Reference","previous_headings":"","what":"This is the function to create a fine mesh for spatial analysis. — fnCreateMesh","title":"This is the function to create a fine mesh for spatial analysis. — fnCreateMesh","text":"function create fine mesh spatial analysis.","code":""},{"path":"/reference/fnCreateMesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is the function to create a fine mesh for spatial analysis. — fnCreateMesh","text":"","code":"fnCreateMesh(de1, boundaryregion)"},{"path":"/reference/fnCreateMesh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is the function to create a fine mesh for spatial analysis. — fnCreateMesh","text":"de1 input point data. sf object, column name 'value' 'geometry'. boundaryregion boundary region mesh. sf object. input data target within boundary.","code":""},{"path":"/reference/fnCreateMesh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is the function to create a fine mesh for spatial analysis. — fnCreateMesh","text":"mesh object.","code":""},{"path":"/reference/fnPredictMelding.html","id":null,"dir":"Reference","previous_headings":"","what":"This is the function to predicts using the melding approach. — fnPredictMelding","title":"This is the function to predicts using the melding approach. — fnPredictMelding","text":"function predicts using melding approach.","code":""},{"path":"/reference/fnPredictMelding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is the function to predicts using the melding approach. — fnPredictMelding","text":"","code":"fnPredictMelding(   depoint = NULL,   dearea = NULL,   dppoint = NULL,   dparea = NULL,   boundaryregion,   mesh = NULL,   priorspdesigma = NULL,   priorspderange = NULL )"},{"path":"/reference/fnPredictMelding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is the function to predicts using the melding approach. — fnPredictMelding","text":"depoint dataset estimation point.sf obj. Columns value, geometry dearea dataset estimation area. sf obj. Columns value, geometry dppoint dataset prediction point. sf obj. Columns geometry dparea dataset prediction area. sf obj. Columns geometry boundaryregion boundary region mesh. sf object. input data target within boundary. mesh obj priorspdesigma positive two-length vector. Construct SPDE pc prior priorspderange positive two-length vector. Construct SPDE pc prior","code":""},{"path":"/reference/fnPredictMelding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is the function to predicts using the melding approach. — fnPredictMelding","text":"sf object including prediction results.","code":""},{"path":"/reference/spatialm.html","id":null,"dir":"Reference","previous_headings":"","what":"spatialm: A package for predicting the spatial misaligned data using SPDE — spatialm","title":"spatialm: A package for predicting the spatial misaligned data using SPDE — spatialm","text":"spatialm package provides two categories important functions: fnCreatMesh, fnPredictMelding.","code":""},{"path":"/reference/spatialm.html","id":"spatialm-functions","dir":"Reference","previous_headings":"","what":"spatialm functions","title":"spatialm: A package for predicting the spatial misaligned data using SPDE — spatialm","text":"fnCreatMesh functions helps users create fine mesh. fnPredictMelding use Bayesian Melding Methdos provide Moraga (2017)","code":""},{"path":[]},{"path":"/news/index.html","id":"the-version-include-two-export-functions-fncreatemesh-fnpredictmelding-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"The version include two export functions: fnCreateMesh(); fnPredictMelding();","title":"spatialmp 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
